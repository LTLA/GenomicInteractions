% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/findOverlaps.R
\docType{methods}
\name{findOverlaps,GenomicInteractions,ANY-method}
\alias{findOverlaps,GenomicInteractions,ANY-method}
\alias{findOverlaps}
\alias{findOverlaps,ANY,GenomicInteractions-method}
\title{Find overlaps between GenomicInteractions}
\usage{
\S4method{findOverlaps}{GenomicInteractions,ANY}(query, subject,
  maxgap = -1L, minoverlap = 0L, type = c("any", "start", "end",
  "within", "equal"), select = c("all", "first", "last", "arbitrary"),
  ..., use.region = c("any", "first", "second", "both"))

\S4method{findOverlaps}{ANY,GenomicInteractions}(query, subject,
  maxgap = -1L, minoverlap = 0L, type = c("any", "start", "end",
  "within", "equal"), select = c("all", "first", "last", "arbitrary"),
  ..., use.region = c("any", "first", "second", "both"))
}
\arguments{
\item{query}{A \linkS4class{GenomicInteractions} instance or any \linkS4class{Vector}-like object that can be overlapped with a \linkS4class{GenomicRanges} via \code{\link{findOverlaps}}.}

\item{subject}{Same as \code{query}.}

\item{maxgap}{Integer scalar specifying the maximum gap between two genomic intervals to consider them as overlapping, see \code{?\link{findOverlaps}} for details.}

\item{minoverlap}{Integer scalar specifying the minimum overlap between two genomic intervals to consider them as overlapping, see \code{?\link{findOverlaps}} for details.}

\item{type}{String specifying the type of overlap, see \code{?\link{findOverlaps}} for details.}

\item{select}{String specifying what kind of output to return, see \code{?\link{findOverlaps}} for details.}

\item{...}{Further arguments to pass to \code{\link{findOverlaps}}.}

\item{use.region}{String specifying which regions should be used to perform the overlap, see below.}
}
\value{
If \code{type="any"}, a \linkS4class{Hits} object is returned specifying the overlaps between \code{query} and \code{subject}.

Otherwise, an integer vector is returned of length equal to \code{length(query)}, containing the selected index of \code{subject} that is overlapped by each entry of \code{query} (or \code{NA}, if there are no overlaps).
}
\description{
Find one-dimensional overlaps between GenomicInteractions and other genomic intervals,
or two-dimensional overlaps between two GenomicInteractions objects.
}
\section{One-dimensional overlaps}{

If only one of \code{query} or \code{subject} is an \linkS4class{IndexedRelations} object,
a one-dimensional overlap is performed. 
This involves identifying overlaps between the individual anchor regions without consideration of the pairing of anchor regions in each interaction.
One-dimensional overlaps are useful for identifying any kind of overlap between the interactions' anchor regions and the query/subject of interest.

Let's say that \code{query} is the IndexedRelations object, in which case:
\itemize{
\item If \code{use.region="any"}, an element of \code{subject} is considered to overlap an element of \code{query} if the former overlaps either of the anchor regions of the latter.
\item If \code{use.region="first"}, an element of \code{subject} is considered to overlap an element of \code{query} if the former overlaps the first anchor region of the latter.
\item If \code{use.region="second"}, an element of \code{subject} is considered to overlap an element of \code{query} if the former overlaps the second anchor region of the latter.
}
The same principles apply when \code{subject} is the IndexedRelations object.

Overlaps between genomic regions are defined based on the various parameters passed to \code{\link{findOverlaps}},
e.g., \code{maxgap}, \code{minoverlap}.
If \code{query} is the IndexedRelations object, the anchor regions will also be the \code{query} in the \code{\link{findOverlaps}} call.
Conversly, if \code{subject} is the IndexedRelations, the anchor regions will be the \code{subject}.
This has implications for overlap settings that are not symmetric, e.g., \code{type="within"}.
}

\examples{
######################
## One-dimensional ###
######################

anchor1 <- GRanges(c("chr1", "chr1", "chr1", "chr1"), 
    IRanges(c(10, 20, 30, 20), width=5))
anchor2 <- GRanges(c("chr1", "chr1", "chr1", "chr2"), 
    IRanges(c(100, 200, 300, 50), width=5))
test <- GenomicInteractions(anchor1, anchor2)

findOverlaps(test, GRanges("chr1:25-100"))
findOverlaps(test, GRanges("chr1:25-100"), use.region="first")
findOverlaps(test, GRanges("chr1:25-100"), use.region="second")

findOverlaps(GRanges("chr1:25-100"), test)
findOverlaps(GRanges("chr1:25-100"), test, use.region="first")
findOverlaps(GRanges("chr1:25-100"), test, use.region="second")

}
