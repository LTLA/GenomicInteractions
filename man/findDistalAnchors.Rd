% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/findDistalAnchors.R
\docType{methods}
\name{findDistalAnchors}
\alias{findDistalAnchors}
\title{Find distal anchor regions}
\usage{
\S4method{findDistalAnchors}{GenomicInteractions}(x, ref, local = TRUE,
  ...)
}
\arguments{
\item{x}{A \linkS4class{GenomicInteractions} object.}

\item{ref}{A \linkS4class{GenomicRanges} object of length 1.}

\item{...}{Further arguments to pass to \code{\link{findOverlaps}}.}

\item{internal}{A logical scalar specifying whether interactions should be retained if both anchors overlap \code{ref}.}
}
\value{
A \linkS4class{GenomicRanges} object containing all distal anchor regions.
}
\description{
Given a reference region, find the distal anchor regions that interact with that region.
}
\details{
This function will identify all interactions in \code{x} that have one-dimensional overlaps with \code{ref},
and it will return the non-overlapping anchor region for each such interaction.
Any per-interaction metadata in \code{x} is carried over to the output object,
along with per-feature metadata in \code{regions(x)}.

The returned genomic intervals represent the distal interactors to \code{ref} in \code{x}.
One can view this as taking a \dQuote{cross-section} of the interaction space at the specified \code{ref},
thus projecting all the interactions involving \code{ref} onto the linear genome.
This is analogous to what is done in 4C experiments.
}
\examples{
anchor1 <- GRanges("chr1", IRanges(sample(1000, 100), width=5))
anchor2 <- GRanges("chr1", IRanges(sample(1000, 100), width=5))
test <- GenomicInteractions(anchor1, anchor2)
mcols(test)$original <- seq_along(test)
test

findDistalAnchors(test, GRanges("chr1:1-100"))
findDistalAnchors(test, GRanges("chr1:1-100"), local=FALSE)
findDistalAnchors(test, GRanges("chr1:1-100"), type="within")

}
\author{
Aaron Lun
}
